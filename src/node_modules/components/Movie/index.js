import React, {Component} from 'react'
import {API_KEY, API_URL} from "config";
import Navigation from 'components/elements/Navigation'
import MovieInfo from 'components/elements/MovieInfo'
import MovieInfoBar from 'components/elements/MovieInfoBar'
import FourColGrid from 'components/elements/FourColGrid'
import Actor from 'components/elements/Actor'
import Spinner from 'components/elements/Spinner'
import 'components/Movie/Movie.css'
import axios from 'axios'


export default class Auth extends Component{

    state = {
        movie: null,
        actors: null,
        directors: [],
        loading: false
    }

    componentDidMount() {

        if(localStorage.getItem(`${this.props.match.params.movieId}`)){

            const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`))

            this.setState({...state})

        } else {
            this.setState({loading: true})

            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`

            this.fetchItems(endpoint)
        }
    }

    fetchItems = endpoint => {
        axios.get(endpoint)
            .then(res => {
                console.log(res.data)

                if(res.status_code){
                    this.setState({loading: false})
                } else {
                    this.setState({
                        movie: res.data
                    }, () => {
                        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}&language=en-US`
                        axios.get(endpoint)
                            .then(res => {
                                const directors = res.data.crew.filter(member => member.job === 'Director')

                                this.setState({
                                    actors: res.data.cast,
                                    directors,
                                    loading: false
                                }, () => {
                                    localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state))
                                })

                            })
                    })
                }

            })
            .catch(e => console.error(e))
    }

    render(){
        return(
            <div className='rmdb-movie'>
                {this.state.movie ?
                    <div>
                        <Navigation movie={this.props.location.movieName} />
                        <MovieInfo movie={this.state.movie} directors={this.state.directors} />
                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />
                    </div>

                    : null}

                {this.state.actors ?

                    <div className='rmdb-movie-grid'>
                        <FourColGrid
                            header={'Actors'}
                        >

                            {this.state.actors.map((element, i) => {
                                return <Actor  key={i} actor={element} />
                            })}

                        </FourColGrid>

                    </div>

                    : null}

                {!this.state.actors && !this.state.loading ? <h1>No Movie found</h1> : null}

                {this.state.loading ? <Spinner /> : null}
            </div>
        )
    }
}